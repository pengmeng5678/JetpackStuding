https://www.jianshu.com/p/488283f74e69
https://www.jianshu.com/p/06c0ae8d9a96
1.CoordinatorLayout介绍
    CoordinatorLayout is a super-powered FrameLayout
    CoordinatorLayout is intended for two primary use cases:
        As a top-level application decor or chrome layout
        As a container for a specific interaction with one or more child views
    Behavior描述
        Interaction behavior plugin for child views of CoordinatorLayout
    简单来说,CoordinatorLayout是用来协调其子View们之间动作的一个父View,而Behavior就是用来给CoordinatorLayout的子View来交互的
2.简单使用
    1.通过创建一个ScrollingActivity可以创建一个简单的示例，在布局文件中的结构如下
        CoordinatorLayout
            AppBarLayout
                CollapsingToolbarLayout
                    Toolbar
            contentScrolling
            FloatingActionButton

        其中CoordinatorLayout配置android:fitsSystemWindows="true"
        表示子布局位于状态栏上方,此时我们应该设置Activity为透明状态栏模式
    2.contentScrolling
        表示Recyclerview、NestedScrollView(替代ScrollView)等可滑动的布局
        这个布局需要设置layout_behavior="@string/appbar_scrolling_view_behavior
    3.CollapsingToolbarLayout
        AppBarLayout的子布局有5种滚动标识(即CollapsingToolbarLayout中配置的app:layout_scrollFlags属性)
            1.scroll:将此布局和滚动时间关联。这个标识要设置在其他标识之前，没有这个标识则布局不会滚动且其他标识设置无效
            2.enterAlways:任何向下滚动操作都会使此布局可见。这个标识通常被称为“快速返回”模式
            3.enterAlwaysCollapsed：假设你定义了一个最小高度（minHeight）同时enterAlways也定义了，那么view将在到达这个最小高度的时候开始显示，并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完
            4.exitUntilCollapsed：当你定义了一个minHeight，此布局将在滚动到达这个最小高度的时候折叠
            5.snap:当一个滚动事件结束，如果视图是部分可见的，那么它将被滚动到收缩或展开。例如，如果视图只有底部25%显示，它将折叠。相反，如果它的底部75%可见，那么它将完全展开
        CollapsingToolbarLayout可以通过app:contentScrim设置折叠时工具栏布局的颜色，通过app:statusBarScrim设置折叠时状态栏的颜色。默认contentScrim是colorPrimary的色值，statusBarScrim是colorPrimaryDark的色值
    4.Toolbar
        CollapsingToolbarLayout的子布局有3种折叠模式（Toolbar中设置的app:layout_collapseMode）
            1.off：这个是默认属性，布局将正常显示，没有折叠的行为。
            2.pin：CollapsingToolbarLayout折叠后，此布局将固定在顶部。
            3.parallax：CollapsingToolbarLayout折叠时，此布局也会有视差折叠效果

    5.FloatingActionButton
        这个控件通过app:layout_anchor这个设置锚定在了AppBarLayout下方，如
            app:layout_anchor="@id/app_bar"
            app:layout_anchorGravity="bottom|end"
        FloatingActionButton源码中有一个Behavior方法，当AppBarLayout收缩时，FloatingActionButton就会跟着做出相应变化