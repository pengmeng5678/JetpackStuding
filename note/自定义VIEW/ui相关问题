1.ImageView配置src和background有什么区别
    简单说src是原图显示,不改变图片的大小;用background的时候,按照组件的大小来放大或者缩小图

    区别一：图片透明度
        src:在设置ImageView的setAlpha时有效果
        background：在设置ImageView的setAlpha没有效果
    区别二
        src存放原图大小，不进行拉伸
        background:根据Imageview的宽高来放大或缩小图片

2.gravity和layout_gravity区别
    gravity
        这个是针对控件里的元素来说的，用来控制元素在控件里的位置；如在一个Button按钮空间中设置如下属性
        android:gravity="left"和android:text="提交"，这时Button上的文字“提交”将会位于Button的左部

    layout_gravity
        这个是针对控件本身来说的，用来控制该控件在父控件中的位置
        如，android:layout_gravity="left"属性时，表示该Button按钮将位于界面的左部

3.requestlayout、invalidate、postInvalidate
    requestlayout:会触发三大流程
    invalidate:会触发onDraw流程，在UI线程调用(由于mLayoutRequested为false，不会导致onMeasure和onLayout被调用，而OnDraw会被调用)
    postInvalidate:会触发onDraw流程，可以在非UI线程调用(通过handler最终调用invalidate)

6.21.自定义 View 的流程和注意事项
    大多数自定义View要么是在onDraw方法中画点东西，和在onTouchEvent中处理触摸事件。

    自定义View步骤 ：
        onMeasure，可以不重写，不重写的话就要在外面指定宽高，建议重写；
        onDraw，看情况重写，如果需要画东西就要重写；
        onTouchEvent，也是看情况，如果要做能跟手指交互的View，就重写；

    自定义View注意事项：
        如果有自定义布局属性的，在构造方法中取得属性后应及时调用recycle方法回收资源；
        onDraw和onTouchEvent方法中都应尽量避免创建对象，过多操作可能会造成卡顿；

    自定义ViewGroup步骤：
        onMeasure（必须），在这里测量每一个子View，还有处理自己的尺寸；
        onLayout（必须），在这里对子View进行布局；
        如有自己的触摸事件，需要重写onInterceptTouchEvent或onTouchEvent;

    自定义ViewGroup注意事项：
        如果想在ViewGroup中画点东西，又没有在布局中设置background的话，会画不出来，这时候需要调用setWillNotDraw方法，并设置为false；
        如果有自定义布局属性的，在构造方法中取得属性后应及时调用recycle方法回收资源；
        onDraw和onTouchEvent方法中都应尽量避免创建对象，过多操作可能会造成卡顿；
