一、JVM简介
    定义：JVM是一种规范
    特性：跨平台、语言无关化
    支持JVM规范的语言：java、Kotlin、Groovy、Scala

二、JVM的内存区域
    线程私有区域：虚拟机栈、本地方法栈、程序计数器
    线程共享区域：堆、方法区
    直接内存

三、JVM内存区域详解
    程序计数器：指向当前线程正在执行的字节码指令的地址
    虚拟机栈：
        作用：存储当前线程运行java方法所需要的数据、指令、返回地址
        栈帧：一个方法对应一个栈帧，大小限制和平台相关，默认是1K,超过便会栈溢出stackOverFlowError(方法递归调用),
        操作数栈、局部变量表、动态连接、完成出口
    本地方法栈：为JVM使用到本地(Native)方法服务
    方法区：永久代和元空间运行时常量池

    直接内存：NIO中的DirectByteBuffer

四、深入理解JVM的内存区域
    1.命令行查看当前进程的JVM为认参数 jinfo -flags 10004
    2.JVM内存处理全流程
        1.申请JVM内存
        2.初始化运行时数据区
        3.类加载
        4.执行方法
        5.创建对象
    3.JHSDB工具：查看内存区域地址、类的内存信息(JVM内存管理下,40分钟)
        1.启动JHSDB工具
            进入以下目录C:\Program Files\Java\jre1.8.0_101\lib
            命令行执行以下命令打开工具 java -cp .\sa-jdi.jar sun.jvm.hotspot.HSDB
        2.查看当前运行程序的进程号
            jps
        3.通过工具查询这个进程号的内存区域地址，或者查询全路径类的内存信息

五、内存溢出分类
    栈溢出
    堆溢出
    方法区溢出
    直接内存溢出