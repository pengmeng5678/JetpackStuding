https://www.jianshu.com/p/36b488863bc0
1.跨进程通信介绍
    IPC:interprosses communication
    Linux的跨进程通信方式
        1.匿名管道Pipe
        2.命名管道FIFO
        3.信号Signal
        4.信号量semaphore
        5.消息队列Message queue
        6.共享内存Share Memory
        7.套接字Socket
2.跨进程通信的目的
    1.数据传递
    2.共享数据
    3.通知事件
    4.资源共享
    5.进程控制

3.各类进程通信方式特点及优缺点对比
    见Linux进程通信比较.png

4.内核态与用户态
    内核态：CPU可以访问内存所有数据,包括外围设备，如硬盘、网卡。CPU可以将自己从一个程序切换到另外一个程序
    用户态: 只能受限访问内存,且不允许访问外围设备,占用CPU的能力被削弱,CPU资源可以被其他程序获取

    为什么需要有用户态和内核态
        为了限制不同程序之间的访问能力，防止他们获取别的程序的内存的数据，或者获取外围键盘的能力并发送到网络
        CPU就区分出来两个权限等级：用户态和内核态

    用户态和内核态的切换
        所有的用户程序都是运行在用户态的,但是有时候程序确实需要做一些内核态的事情,例如从键盘读取数据,而唯一可以
    做这些事情的就是操作系统,这时程序就需要先向操作系统请求,以程序的名义执行这些操作。此时就需要一个机制：用户态到内核态的切换

4.多进程模式的坑
    Android系统会为每个应用分配唯一的UID,具有相同UID的应用才能共享数据
    当我们给某个应用组件如Menifest的Service添加"android:process"属性后,当该Service被启动时系统会为其创建一个单独的进程

    此时两个进程间可能会出现一些问题
        1.静态成员和单例模式完全失效
            系统为每个应用(进程)分配了独立的虚拟机,所以不同的虚拟机访问同一个类会产生多份副本,进程1修改了A类的变量,进程2访问A类的变量还是修改前的值
        2.线程同步机制完全失效
        3.SharedPreferences可靠性下降
        4.Application多次创建
            两个进程，系统要再创建新的进程，分配独立的虚拟机,这个过程就是启动一个应用的过程
5,.进程如何保活
    从三个方面入手
    1.提高进程优先级,降低进程被杀死的概率
        1.清单文件里面设置priority=1000(最高优先级)
        2.动态注册广播ACTION_SCREEN_OFF/ON,监听屏幕亮屏和锁屏
              锁屏时启动一个像素的activity
              亮屏时关闭这个Activity
        3.将service设为前台服务提高进程优先级
    2.进程被杀死时重启进程
        1.通过广播在onDestroy方法中启动广播,在广播中重启该服务
        2.开启守护进程,在进程被杀死时，守护进程开启主进程
        3.监听高频系统广播启动该进程
    3.依赖第三方
        1.根据终端不同，如小米手机接入小米推送,华为手机接入华为推送，其他手机接入腾讯信鸽
        2.framework层将该应用添加到白名单
        3.将该应用放到system/app目录下作为系统应用
