https://www.jianshu.com/p/f5e103674953
<<Android系统源码情景分析>>
1.背景介绍
    Android应用程序四大组件运行在一个进程中,而如ActivityManagerService运行在系统进程中
    或者两个Android应用有传递数据、消息通知等需求，此时就需要有进程间通信了。

    Android为什么选用Binder作为最重要的IPC机制
        1.传统IPC通信缺点
            命名管道namePipe 任何进程都能通信,但速度慢
            消息队列MessageQueue:容量受到系统限制,且第一次读的时候需要考虑一次没有读完数据的问题
            信号Signal：不能传递复杂消息,只能用来同步
            共享内存share memory：能够控制容量、速度快，但要保持同步
            套接字Socket：通信复杂,客户端需要单独开启监听线程接收服务端发过来的数据，麻烦，速度也不快

        2.Android平台的进程之间需要频繁的通信,所以对通信机制要求较高,要求速度快，还有能进行复杂的数据交换,并且能同步调用
            所以Android系统没有采用Linux的传统通信机制,而是开发了一套新的进程间通信方式：Binder。
        Binder在传递数据时,只需要进行一次拷贝操作,提高了效率，而且节省了内存空间

        Binder提供了以下功能
            1.用驱动程序来推进进程间的通信方式
            2.通过共享内存来提高性能
            3.为每对Server进程和Client进程都维护一个Binder线程池
            4.针对系统中的对象引入和跨进程对象的引用映射
            5.进程间同步调用

2.Binder进程通信机制名称简介
    Binder进程间通信时在OpenBinder的基础上实现的
    Binder它采用的是C/S通信方式,提供服务的进程是Server进程,访问服务的是Client进程
    同一个Server进程可以同时运行多个组件向Client进程提供服务，这些组件称为Service组件
    同一个Client进程也可以同时向多个Service组件请求服务,每一个请求都对应有一个Client组件,或称为Service代理对象

    Binder进程间通信机制的每一个Server进程和Client进程都维护一个Binder线程池来处理进程间的通信请求,因此Server进程和Client进程可以并发提供和访问服务
    Server进程和Client进程的通信要依靠运行在内核空间的Binder驱动来进行。
    Binder驱动程序向用户空间暴露了一个设备文件/dev/binder,是的应用程序进程可以间接通过它建立通信通道

    Service组件在启动时会将自己注册到ServiceManager组件中,以便Client组件可以通过Service Manager找到他
    因此我们称Service Manager组件为Binder进程间通信的上下文管理者。
    同时Service Manager也需要和普通的Server进程和Client进程通信,我们也称它为Service组件

3.Binder定义
    1.从IPC角度讲：Binder是Android中的一种跨进程通信方式,该方式在Linux中没有，是Android独有的。Binder就是Android的一个类,继承IBinder接口
    2.从Android Driver层讲，Binder可以理解为一种虚拟物理设备,它的设备驱动是/dev/driver
    3.从Android Native层讲：Binder创建Service Manager以及BpBinder/BbBinder模型,搭建与Binder驱动的桥梁
    4.从Android Framework层讲:Binder是各种Manager(ActivityManager/WindowManager等)和相应的xxManagerService的桥梁
    5.从Android App层:Binder是客户端和服务端进行通信的媒介,当bindService时,服务端会返回一个包含了服务端业务调用的Binder对象
    通过这个Binder对象,客户端就可以获取服务端提供的服务或数据,这里的服务包括普通服务和基于AIDL的服务


4.Binder通信概述
    Binder通信是一种C/S结构的通信结构
    1.从表面上讲,是client通过获得一个Server的代理接口,对Server进行直接调用
    2.实际上,代理接口中定义的方法与server中定义的方法是一一对应的
    3.Client端调用这个代理接口中的方法时,代理接口的方法会将client传递的参数打包成Parcel对象
    4.代理接口将Parcel发送给内核的Binder Driver
    5.Server端会读取Binder Driver中请求的数据,如果是发送给自己的,解包Parcel对象,处理并将结果返回
    6.整个调用过程是一个同步过程,在server处理的时候,client会Block
