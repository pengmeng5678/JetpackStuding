https://www.jianshu.com/p/7ebbcc0c5df7
https://www.jianshu.com/p/43367f541a2e
https://blog.csdn.net/huangmindong/article/details/79397948
1.音视频开发的主要内容
    图像、音频、视频的采集、渲染、处理、传输

    1.1采集：它解决的是，数据从哪里来的问题
                采集硬件    Android采集接口          采集参数              输出格式
        视频采集：摄像头     Camera             分辨率、帧率             图像JPEG;视频NV21,NV12,I420
        音频采集：麦克风     AndioRecord        采样率、通道号、位宽      PCM

    1.2渲染：它解决的是，数据怎么展现的问题
        视频渲染：ImageView、SurfaceView、TextureView、OpenGL
        音频播放: AudioTrack(PCM)、Soundpool、MediaPlayer

    1.3处理：它解决的是，数据怎么加工的问题
                        加工类型
        图像/视频 ： 剪裁、缩放、旋转、叠加、编解码
           音频   ：重采样、去噪、回音消除、混音、编解码
                        加工框架
        图像处理：OpenGL，OpenCV，libyuv，ffmpeg 等
        视频编解码：x264，OpenH264，ffmpeg 等
        音频处理：speexdsp，ffmpeg 等
        音频编解码：libfaac，opus，speex，ffmpeg 等

    1.4打包传输：它解决的是，数据怎么共享的问题

        音视频在传输前，怎么打包的，如：FLV，ts，mpeg4 等
        直播推流，有哪些常见的协议，如：RTMP，RSTP 等
        直播拉流，有哪些常见的协议，如：RTMP，HLS，HDL，RTSP 等
        基于 UDP 的协议有哪些？如：RTP/RTCP，QUIC 等

    1.5.差网络处理
        1.缓存区设计
        2.网络监测
        3.丢帧处理
        4.降低码率

2.音视频开发基础概念
  1.音频相关概念
        模拟声音信号转换为数字信号常见方式是通过脉冲编码调制PCM(Pulse Code Modulation)
    要将电压信号转换为PCM信号需要三个过程抽样、量化、编码。这三个过程依赖三个主要参数，采样率、采样位数、声道数

    1.采样频率：录音设备一秒钟内对声音信号的采样次数,采样频率越高,数据量越大,对声音的还原就越真实
    2.位宽(量化精度)每一个采样点都需要一个大小来表示,常用的位宽有PCM_16和PCM_8,即16位或者8位
    3.声道数:由于音频的采集和播放时可以叠加的,所以可以从多个音频源采集数据,并分别输出到不同的扬声器,故声道数一般指声音录制时的音源数量或者播放时的扬声器数量
        单声道(MONO),双声道(Stereo)
    4.音频帧
        实际应用中,为了音频算法处理/传输的方便,一般约定俗成的取2.5ms-60ms为单位的数据量为一帧音频
        如某通道音频信号采样频率为8KHZ,位宽为16bit,20ms一帧,双通道,那一帧音频数据的大小
            8000*16*0.02*2=640byte
    5.常见的音频编码和压缩格式
        音频编码格式:PCM和ADPCM,这些数据代表着无损的原始数字音频信号,添加一些文件头信息,就可以存储为WAV文件了
        音频压缩格式: MP3,AAC,OGC,WMA,Opus,FLAC,APE,m4a,AMR等
    6.常见的Android音频相关的API
        音频采集：MediaRecoder，AudioRecoder
        音频播放:SoundPool,AudioTrack,MediaPlayer
        音频编解码:MediaCodec
        NDK API:OpenSL ES

  2.视频、图片相关概念
    1.帧率(画面的实时性、流畅性)
        指每秒钟刷新的图片的张数，电影的帧速率为24fps
    2.码流/码率(图片质量)
        码流(Data Rate)是指视频文件在单位时间内使用的数据流量，也叫码率或码流率，通俗一点的理解就是取样率,是视频编码中画面质量控制中最重要的部分，一般我们用的单位是kb/s或者Mb/s。一般来说同样分辨率下，视频文件的码流越大，压缩比就越小，画面质量就越高。码流越大，说明单位时间内取样率越大，数据流，精度就越高，处理出来的文件就越接近原始文件，图像质量越好，画质越清晰，要求播放设备的解码能力也越高。
        当然，码流越大，文件体积也越大，其计算公式是文件体积=时间X码率/8。例如，网络上常见的一部90分钟1Mbps码流的720P RMVB文件，其体积就=5400秒×1Mb/8=675MB。
        通常来说，一个视频文件包括了画面及声音，例如一个RMVB的视频文件，里面包含了视频信息和音频信息，音频及视频都有各自不同的采样方式和比特率，也就是说，同一个视频文件音频和视频的比特率并不是一样的。而我们所说的一个视频文件码流率大小，一般是指视频文件中音频及视频信息码流率的总和。
        以国内最流行，大家最熟悉的RMVB视频文件为例，RMVB中的VB，指的是VBR，即Variable Bit Rate的缩写，中文含义是可变比特率，它表示RMVB采用的是动态编码的方式，把较高的采样率用于复杂的动态画面(歌舞、飞车、战争、动作等)，而把较低的采样率用于静态画面，合理利用资源，达到画质与体积可兼得的效果。
        码率和采样率最根本的差别就是码率是针对源文件来讲的。

    3.采样率()
          采样率（也称为采样速度或者采样频率）定义了每秒从连续信号中提取并组成离散信号的采样个数，它用赫兹（Hz）来表示。采样率是指将模拟信号转换成数字信号时的采样频率，也就是单位时间内采样多少点。一个采样点数据有多少个比特。比特率是指每秒传送的比特(bit)数。单位为 bps(Bit Per Second)，比特率越高，传送的数据越大，音质越好.比特率 =采样率 x 采用位数 x声道数.
        采样率类似于动态影像的帧数，比如电影的采样率是24赫兹，PAL制式的采样率是25赫兹，NTSC制式的采样率是30赫兹。当我们把采样到的一个个静止画面再以采样率同样的速度回放时，看到的就是连续的画面。同样的道理，把以44.1kHZ采样率记录的CD以同样的速率播放时，就能听到连续的声音。显然，这个采样率越高，听到的声音和看到的图像就越连贯。当然，人的听觉和视觉器官能分辨的采样率是有限的，基本上高于44.1kHZ采样的声音，绝大部分人已经觉察不到其中的分别了。
        而声音的位数就相当于画面的颜色数，表示每个取样的数据量，当然数据量越大，回放的声音越准确，不至于把开水壶的叫声和火车的鸣笛混淆。同样的道理，对于画面来说就是更清晰和准确，不至于把血和西红柿酱混淆。不过受人的器官的机能限制，16位的声音和24位的画面基本已经是普通人类的极限了，更高位数就只能靠仪器才能分辨出来了。比如电话就是3kHZ取样的7位声音，而CD是44.1kHZ取样的16位声音，所以CD就比电话更清楚
        码率和采样率最根本的差别就是码率是针对源文件来讲的。

    4.比特率
        比特率是指每秒传送的比特(bit)数。单位为bps(Bit Per Second)，比特率越高，传送的数据越大。在视频领域,比特率常翻译为码率 !!!
        比特率表示经过编码（压缩）后的音、视频数据每秒钟需要用多少个比特来表示，而比特就是二进制里面最小的单位，要么是0，要么是1。比特率与音、视频压缩的关系，简单的说就是比特率越高，音、视频的质量就越好，但编码后的文件就越大；如果比特率越少则情况刚好相反。
        比特率是指将数字声音、视频由模拟格式转化成数字格式的采样率，采样率越高，还原后的音质、画质就越好
    5.带宽
        以720*576分辨率，BMP格式，24位真彩色、25帧率为例，所需带宽为：
            720x576（分辨率）x24bit（每像素大小）/8（bit和Byte换算）x25（帧率）=31104000B/s=30375KB/s=29.66MB/s

    6.Android图片格式，从ImageFormat类中找图片格式
        1、I420对应YUV420P，平面格式存储，4:2:0采样，U在前，V在后。
        2、YV12对应YUV420P，平面格式存储，4:2:0采样，V在前，U在后。
        3、NV12对应YUV420SP，半平面格式存储，4:2:0采样，U在前，V在后。
        4、NV21对应YUV420SP，半平面格式存储，4:2:0采样，V在前，U在后。
        5、NV16对应YUV422SP，半平面格式存储，4:2:2采样，U在前，V在后。
        6、YUY2对应YUV422，紧缩格式存储，4:2:2采样，U在前，V在后。

    7.YUV和RGB变换
        为减少传输带宽，我们将得到的视频进行编码后进行传输。一般情况下都使用h264进行编码，这样我们需要传入h264认可的格式、
    h264支持i420格式的输入和输出，这样要求我们在编码前将图片转换为i420,当要显示图片的时候又要将I420格式的图片转换为RGB格式，然后由显示器显示
        YUV转换为RGB分为两步
            1.根据YUV的采样特点将其他格式的YUV转换为YUV444
            2.根据公式将YUV444转换为RGB，将RGB转换为YUV则步骤相反

    8.Android推荐的PreView Format是NV21,在PreviewCallback中会返回preview的NV21图片
        如果是软编的话由于H264支持I420的图片格式,因此需要将N21格式转为I420格式,然后交给H264库
        如果是硬编的话，由于Android的编解码库支持I420和NV21,因此可以将NV21图片转换为I420或者NV12,然后交给硬编解码器
    9.Android对视音频提供的类
        1.MediaMetadataReceiver，获取视频相关信息，例如视频宽高、时长、旋转角度、码率等等
        2.MediaExtractor:视音频分离器，将一些格式的视频分离出视频轨道和音频轨道
        3.MediaCode音视频编解码
        4.MediaMuxer音视频合成器
        5.MediaFormat,音视频相应的格式信息
        6.MediaCrypto，音视频加解密
        7.MediaCodeInfo音视频编解码相关信息的类
        8.MediaCodec.BufferInfo,存放ByteBuffer相应信息的类