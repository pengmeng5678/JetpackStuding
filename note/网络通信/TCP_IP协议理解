https://www.jianshu.com/p/45d27f3e1196
https://www.jianshu.com/p/65605622234b
https://www.jianshu.com/p/116ebf3034d9
1.计算机网络结构
    OSI体系结构：七层网络模型：应用层、表示层、会话层、传输层、网络层、链路层、物理层
    TCP/IP体系结构：应用层、运输层、网际层、网络接口层
    五层体系结构：应用层(HTTP、SMTP/DNS、RTP)、传输层(TCP/UDP)、网络层(IP)、数据链路层、物理层

2.TCP协议详解
    1.定义 Transmission Control Protocol,即传输控制协议
        1.属于传输层通信协议
        2.基于TCP的应用层协议有HTTP、SMTP、FTP、Telnet和POP3

    2.特点
      1.面向连接：使用TCP传输数据前，必须建立TCP连接，传输完毕后再释放连接
      2.全双工通信：建立TCP连接后,通信双发都能够发送数据
      3.有序：通过TCP连接传送的数据，不丢失、无差错、不重复、按序到达
      4.面向字节流：数据以流的形式进行传输

    3.优缺点
        优点：数据传输可靠
        缺点：效率慢(需要建立连接，发送确认包等)

    4.应用场景(对应的应用层协议)
        万维网：HTTP协议
        文件传输：FTP协议
        电子邮件：SMTP协议
        远程终端接入：TELNET协议

    5.报文段格式
        TCP虽面向字节流，但传送的数据单元是报文段
        报文段=头部+数据两部分
        TCP的全部功能体现在它头部中各字段的作用
            1.Source Port和Destination Port分别占用16位，表示源端口号和目的端口号；用于区分主机中的不同进程
            IP地址用于区分不同主机，源端口和目的端口配合IP首部的源IP就能确认一个TCP连接
            2.Sequenece Number，用于标识从TCP发送端向TCP接收端的数据字节流；用于解决网络乱序问题
            3.Acknowledgment Number，32位确认序号包发送确认的一端所期望收到的下一个序号。
                因此，确认需要应该上次已成功收到数据字节序号+1
            4.TCP Flags：TCP首部的6个比特，用于操控TCP的状态机,依次为
                URG(紧急指针域),ACK(应答域),PSH(PUSH操作),RST(连接复位请求),SYN(同步序号),FIN(双发数据传输完成)


    6.建立连接过程
        TCP的三次握手：TCP是面向连接的,无论哪一方向另一方发送数据前,都必须在双方之间建立一条连接
        连接是通过三次握手进行初始化的。三次握手的目的是同步连接双方的序列号和确认号并交换TCP窗口大小的信息

        1.第一次握手，建立连接，客户端发送连接请求报文段，将SYN设为1,将Sequence Num置为X,客户端进入SYN+SEND状态，等待服务器的确认
        2.第二次握手,服务器收到SYN报文。对SYN报文段进行确认,将Acknowledment Number置为X+1,同时自己也发送一个SYN信息,将SYN置为1，SequentNumber设为Y
            将SYN信息和ACK信息统一放到一个报文段一并发送给客户端,此时服务器进入SYN+RECV状态
        3.第三次握手，客户端收到服务器的SYN+ACK报文段,然后将Acknowledment Number设为Y+1,向服务器发送ACK报文段
            这个报文段发送完毕后,客户端和服务器就都进入了ESTABLISHED状态,完成TCP三次握手

    7.断开连接过程
        客户端和服务端进行三次握手成功，当数据传送完毕后,TCP断开连接的过程的就是
        四次挥手
        1.客户端(也可以是服务器),设置Sequence Num和Acknowledgment Num的值，向服务器发送一个FIN报文段
            此时客户端进入FIN_WAIT_1状态
        2.服务器收到客户端发来的FIN报文段,向客户端回一个ACK报文段,将Acknowledment Num设置为Sequence Num+1
        客户端进入FIN_WAIT2状态,服务器进入CLOSE_WAIT状态;服务器告诉客户端,我同意你的关闭请求
        3.服务器向客户端发送一个FIN报文段,请求关闭连接,同时服务器进入LAST_ACK状态
        4.客户端收到服务器的FIN报文段,向主机发送一个ACK报文段,然后服务器进入TIME_WAIT状态
        服务器收到客户端的ACK报文段后就关闭连接，此时客户端等待2Ms以后没有收到回复,则证明Server端已正常关闭
        这时客户端也关闭连接

3.TCP连接常见问题
    1.为什么TCP连接需要三次握手
        为防止已失效的连接请求报文段突然又传送到服务端,从而一直等待客户端请求,最终导致死锁,浪费资源
        如客户端发送第一个报文段并没有丢失，而是在某个网络节点长时间滞留了,等到连接释放的某个时间才到达服务端
    此时服务端以为是新的连接请求,于是发送确认报文段，
        如果只要两次握手，此时新的连接就建立了；由于现在Client并没有发出建立连接的请求，故不会理财服务器的确认信息
    此时服务端会一直等到Client端发来数据,这样服务器很多资源就白白浪费了
        而采用三次握手的办法,当服务器发来确认信息时,由于client不会向服务器的确认发出确认,server收不到确认,就知道和客户端并没有建立连接

    2.为什么TCP建立连接需要三次握手，而端口连接却需要四次挥手
        TCP连接是面向连接的、可靠的、基于字节流的传输层通信协议，TCP是全双工通信模式，这就意味着
        当客户端发送FIN报文段的时候，只表示客户端没有数据传输了，但服务器可能还有数据没有发送完成
        所以客户端发送FIN报文段，服务器返回ACK报文段后，可能还有数据要发送，当数据发送完成后，才会再发送FIN报文段

    3.TCP连接和UDP连接的区别
        类型                  特点                          性能              应用场景    首部字节
               是否面向连接   传输可靠性   传输形式    传输效率    所需资源

        TCP       面向连接      可靠       字节流        慢         多         要求通信可靠  20-60
        UDP        无连接      不可靠     数据报文段      快        少          要求通信速度快  8