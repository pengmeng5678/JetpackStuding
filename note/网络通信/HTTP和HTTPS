https://www.jianshu.com/p/a6d086a3997d
https://www.jianshu.com/p/116ebf3034d9
Http协议介绍
    http://liuwangshu.cn/application/network/1-http.html
以下是对Https的介绍
https://www.jianshu.com/p/ca7df01a9041
网络请求全流程
https://juejin.im/post/5e001e876fb9a0165d74eb8f
HTTPS加密机制
https://zhuanlan.zhihu.com/p/43789231
1.HTTP
    1.介绍
        Hypertext Transfer Protocol 超文本传输协议
       是属于应用层的传输协议，通俗的说就是网络链接传输文本信息的协议
       主要用于包装数据，规定了应用进程间通信的准则
    2.特点
        传输效率高：无连接(交换HTTP报文前,不需要建立HTTP连接)、无状态(数据传输过程中,不保存任何历史状态信息)
        传输可靠性高(采用TCP作用运输层协议,交换报文前需先建立TCP连接)
        兼容性好(支持B/S,C/S),灵活性好(允许传输任意类型的数据对象)
    3.工作方式
        HTTP协议采用请求/响应的工作方式
    4.HTTP报文详解
        1.请求报文和响应报文结构对比
        请求报文
            类型          作用                                          具体介绍
            请求行  声明请求方法、主机域名、资源路径&协议版本          组成=请求方法+请求路径+协议版本
            请求头  声明客户端、服务器/报文的部分信息                 请求方法:定义 对请求对象的操作，GET,POST
            请求体  存放需发送给服务器的数据信息                      请求路径：URL中请求地址部分
                                                                   协议版本：HTTP/1.0、HTTP2.0
        请求报文示例 如下
            POST http://patientapi.shoujikanbing.com/api/common/getVersion HTTP/1.1       //请求行
            Content-Length: 226                                                          //请求报头
            Content-Type: application/x-www-form-urlencoded
            Host: patientapi.shoujikanbing.com
            Connection: Keep-Alive
            User-Agent: Mozilla/5.0 (Linux; U; Android 4.4.4; zh-cn; MI NOTE LTE Build/KTU84P) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1
            Accept-Encoding: gzip
                                                                         //不能省略的空格，下面是请求数据
            clientversion=2_2.0.0&time=1459069342&appId=android&channel=hjwang&sessionId=0d1cee1f31926ffa8894c64804efa855101d56eb21caf5db5dcb9a4955b7fbc9&token=b191944d680145b5ed97f2f4ccf03058&deviceId=869436020220717&type=2&version=2.0.0


       响应报文
           类型          作用                                          具体介绍
           状态行  声明协议版本版本、状态码、状态码描述              组成=协议版本+状态码+状态信息
           响应头  声明客户端、服务器/报文的部分信息                 采用“header”(字段名):value(值)
           响应体  存放需发送给服务器的数据信息                      数据使用方式有3种，数据交换、键值对、分部分

       响应报文示例 如下
           HTTP/1.1 200 OK                                                              //状态行
           Server: nginx                                                               //响应报头
           Date: Sun, 27 Mar 2016 09:02:20 GMT
           Content-Type: text/html;charset=utf-8
           Transfer-Encoding: chunked
           Connection: keep-alive
           Vary: Accept-Encoding
           Set-Cookie: sessionId=0d1cee1f31926ffa8894c64804efa855101d56eb21caf5db5dcb9a4955b7fbc9; expires=Mon, 28-Mar-2016 09:02:20 GMT; Max-Age=86400; path=/; domain=.shoujikanbing.com
           Set-Cookie: PHPSESSID=0d1cee1f31926ffa8894c64804efa855101d56eb21caf5db5dcb9a4955b7fbc9; path=/; domain=.shoujikanbing.com
           Expires: Thu, 19 Nov 1981 08:52:00 GMT
           Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
           Pragma: no-cache
           Content-Encoding: gzip
                                                              //不能省略的空格
           17f                                                //实体报文编码格式为gzip所以显示在这里的响应数据是乱码
                  mP N @     "E ?    n m   1
           w ( HL (1^ P nK  E ѷ93'3gNLH  7P  $c \  T 4a6   L:+ 1dY%$g   h H   +
           ...

        2.GET和POST方法对比
         使用方式             使用参数的长度限制                       传递参数的数据类型   安全性         应用场景

            GET         GET发送的数据存放在URL中,直接附加在URL后,         ASCII字符         差        小量，数据不敏感
                     利用?代表URL的结尾和请求参数的开始                                               具体，从指定的资源请求数据
                        URL的长度限制在2048个字符
            POST                无限制                                  任何类型          好        大量，敏感数据
                                                                                                   具体，从指定资源提交数据
    5.http1.0和http1.1的区别
        1.引入持久连接，同一个TCP的连接中可传送多个HTTP请求&响应
        2.多个请求&响应可同时进行、可重叠
        3.引入更多请求头&响应头

2.HTTPS
    1.介绍
        Hypertext Transfer Protocol Over Secure Socket Layer基于安全套接字层的超文本传输协议
        即HTTP+SSL(Secure Socket Layer),SSL最高版本为3.0，后面的版本叫TLS(Transport layer security)
        HTTPS并非应用层的一种新协议,只是HTTP通讯接口部分用SSL和TLS协议替换
        通常HTTP直接和TCP通信，当使用HTTPS后，则演变为HTTP先和SSL通信，再由SSL和TCP通信
    2.HTTPS的优势
        1.内容加密，建议一个信息的安全通道,保证数据传输的安全性(解决明文数据被窃听)
        2.身份认证，确认网站的真实性(解决对请求来者不拒的问题)
        3.数据完整性,防止内容被第三方冒充或者篡改
3.HTTP和HTTPS的区别
    类型      原理      功能      性能          使用
    HTTP     应用层    非加密     不安全     80标准端口,无需CA证书，http://开头
    HTTPS    传输层     加密      安全       443标准端口,需CA证书,https://开头
4.对称加密和非对称加密
    对称加密:
        加密和解密都是用的相同秘钥,优点是速度快,缺点是安全性低。常见的对称加密有DES和AES
    非对称加密
        非对称加密有一个秘钥对,分为公钥和私钥,使用公钥加密的数据必须使用对应的私钥才能解密。一般私钥自己持有,
        公钥可以公开给对方。优点是安全性比对称加密高,缺点是数据传输效率比对称加密低。常见的非对称加密包括RSA等

    正式场合通常是采用对称加密和非对称加密结合的方式传输数据，采用非对称加密完成秘钥的传递,然后使用对称加密进行数据加密和解密，二者结合保证安全性和传输效率
5.HTTPS的具体工作流程
    1.客户端发起请求
        支持的协议版本,比如TLS1.0版
        一个客户端生成的random1,稍后用于生成"对话秘钥"
        支持的加密方法,比如RSA公钥加密
        支持的压缩方法
    2.服务器响应
        确认使用的加密通信协议版本,比如TLS1.0,如果与客户端协议版本不一致,服务器会关闭加密通信
        一个服务端生成的random2随机数，稍后用于生成"对话秘钥"
        确认使用的加密方法,比如RSA公钥加密
        服务器证书
    3.客户端收到证书后开始验证
        首先验证证书的安全性
        验证通过之后,客户端会生成一个随机数pre-master secret,然后使用证书中的公钥进行加密,然后传递给服务器
    4.服务器收到公钥加密的内容,在服务器使用私钥解密之后获得随机数pre-master secret,
        然后根据ramdom1、ramdom2、pre-master secret通过一定的算法得出一个对称加密的秘钥,作为后面交互过程中使用的对称秘钥
        同时客户端也根据ramdom1、ramdom2、pre-master secret通过同样的算法生成一个对称秘钥
    5.然后后续的交互中就使用这个秘钥对传输的数据进行加密和解密
6.HTTPS相关思考
    1.为什么要用对称加密+非对称加密
        对称加密保证通信效率,非对象加密保证通信安全
    2.为什么不能只用非对称加密
        只用非对称加密,确定是非对称加密速度慢，影响传输效率
    3.为什么要用数字证书(证书明文信息+数字签名组成了数字证书,可以理解为一个人的身份证)
        保证客户端收到的公钥一定是自己服务器的公钥,防止中间人劫持服务器返回给客户端的公钥后,使用非法的公钥与客户端通信
    4.为什么要用数字签名(可以理解为身份证的防伪技术)
        防止数字证书被篡改,比对证书内容和签名是否一致就能察觉是否被篡改
    5.数字签名的制作过程
        1.CA拥有非对称加密的公钥和私钥
        2.CA对证书明文信息进行hash(hash后得到128位固定长度的hash码,这样解密时速度就会快很多)
        3.对hash后的值用私钥加密,得到数字签名
    6.客户端如何验证数字证书的合法性
        1.拿到证书,得到明文T，数字签名S
        2.使用CA机构的公钥对S解密
        3.用证书里说明的hash算法对明文T进行hash得到T1
        4.验证T1和S是否相等,相等则说明证书可信。(其中明文中包含有服务器的域名等信息,所以证书不存在被掉包等现象)